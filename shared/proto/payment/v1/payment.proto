syntax = "proto3";

// Package payment.v1 содержит API для работы с оплатой заказа
package payment.v1;

option go_package = "github.com/CantDefeatAirmanx/space-engeneering/shared/proto/payment/v1;payment_v1";

// PaymentService предоставляет API для работы с оплатой заказа
service PaymentService {
    // PayOrder оплачивает заказ
    rpc PayOrder(PayOrderRequest) returns (PayOrderResponse);
}

// PayOrderRequest описывает запрос на оплату заказа
message PayOrderRequest {
    // order_uuid идентификатор заказа
    string order_uuid = 1;
    // user_uuid идентификатор пользователя
    string user_uuid = 2;
    // payment_method метод оплаты
    PaymentMethod payment_method = 3;
}

// PayOrderResponse описывает ответ на запрос на оплату заказа
message PayOrderResponse {
    // transaction_uuid идентификатор транзакции
    string transaction_uuid = 1;
}

// PaymentMethod описывает метод оплаты
enum PaymentMethod {
    // PAYMENT_METHOD_UNKNOWN_UNSPECIFIED неизвестный метод оплаты
    PAYMENT_METHOD_UNKNOWN_UNSPECIFIED = 0;
    // PAYMENT_METHOD_CARD оплата картой
    PAYMENT_METHOD_CARD = 1;
    // PAYMENT_METHOD_SPB оплата через СПБ
    PAYMENT_METHOD_SPB = 2;
    // PAYMENT_METHOD_CREDIT_CARD оплата кредитной картой
    PAYMENT_METHOD_CREDIT_CARD = 3;
    // PAYMENT_METHOD_INVESTOR_MONEY оплата инвестиционными деньгами
    PAYMENT_METHOD_INVESTOR_MONEY = 4;
}
