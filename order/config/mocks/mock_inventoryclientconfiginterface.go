// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify
// Code generated for CantDefeatAirmanx service
// Â© CantDefeatAirmanx 2025.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
)

// NewMockInventoryClientConfigInterface creates a new instance of MockInventoryClientConfigInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockInventoryClientConfigInterface(t interface {
	mock.TestingT
	Cleanup(func())
},
) *MockInventoryClientConfigInterface {
	mock := &MockInventoryClientConfigInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockInventoryClientConfigInterface is an autogenerated mock type for the InventoryClientConfigInterface type
type MockInventoryClientConfigInterface struct {
	mock.Mock
}

type MockInventoryClientConfigInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockInventoryClientConfigInterface) EXPECT() *MockInventoryClientConfigInterface_Expecter {
	return &MockInventoryClientConfigInterface_Expecter{mock: &_m.Mock}
}

// Url provides a mock function for the type MockInventoryClientConfigInterface
func (_mock *MockInventoryClientConfigInterface) Url() string {
	ret := _mock.Called()

	if len(ret) == 0 {
		panic("no return value specified for Url")
	}

	var r0 string
	if returnFunc, ok := ret.Get(0).(func() string); ok {
		r0 = returnFunc()
	} else {
		r0 = ret.Get(0).(string)
	}
	return r0
}

// MockInventoryClientConfigInterface_Url_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Url'
type MockInventoryClientConfigInterface_Url_Call struct {
	*mock.Call
}

// Url is a helper method to define mock.On call
func (_e *MockInventoryClientConfigInterface_Expecter) Url() *MockInventoryClientConfigInterface_Url_Call {
	return &MockInventoryClientConfigInterface_Url_Call{Call: _e.mock.On("Url")}
}

func (_c *MockInventoryClientConfigInterface_Url_Call) Run(run func()) *MockInventoryClientConfigInterface_Url_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockInventoryClientConfigInterface_Url_Call) Return(s string) *MockInventoryClientConfigInterface_Url_Call {
	_c.Call.Return(s)
	return _c
}

func (_c *MockInventoryClientConfigInterface_Url_Call) RunAndReturn(run func() string) *MockInventoryClientConfigInterface_Url_Call {
	_c.Call.Return(run)
	return _c
}
